https://leetcode.com/problems/remove-duplicates-from-sorted-list/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
     ListNode* deleteDuplicates(ListNode* head) {
         ListNode* current = head;
         if (!current || !current->next) return head;
         int tmp = current->val;
         while (current && current->next) {
             if (current->next->val == tmp) {
                 if (current->next->next == nullptr) {
                     current->next = nullptr;
                 }
                 else {
                     current->next = current->next->next;
                 }
             }
             else{
                 current = current->next;
                 if(current)
                    tmp = current->val;
             }
         }
         return head;

     }
};
