https://leetcode.com/problems/sort-characters-by-frequency/
struct comparator
{
    bool operator()(pair<char, int>p1, pair<char, int>p2){
                       return p1.second < p2.second;
    }
};
class Solution {
public:
    string frequencySort(string s) {
        priority_queue<pair<char, int>, vector<pair<char, int>>, comparator>pq;
        map<char, int>mp;
        for(int i = 0; i < s.size(); i++){
            if(mp.count(s[i])){
                mp[s[i]] +=1;
            }
            else{
                mp.insert(make_pair(s[i], 1));
            }
        }
        for(auto it: mp){
            pq.push(make_pair(it.first, it.second));
        }
        s = "";
        while(!pq.empty()){
            int k = pq.top().second;
            for(int i = 0; i < k; i++){
                s+=pq.top().first;
            }
            pq.pop();
        }
        return s;
    }
};
